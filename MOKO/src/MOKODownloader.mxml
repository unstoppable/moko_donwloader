<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:local="*"
					   width="1040" height="640"
					   applicationComplete="applicationCompleteHandler(event)" fontFamily="微软雅黑"
					   showStatusBar="false" xmlns:view="com.raisedtech.moko.view.*">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace local "*";
		s|List {
			contentBackgroundAlpha : 0;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import air.update.ApplicationUpdaterUI;
			import air.update.events.UpdateEvent;
			
			import com.raisedtech.moko.model.Model;
			import com.raisedtech.moko.view.AddGirlView;
			
			import mx.events.FlexEvent;
			import mx.logging.Log;
			import mx.logging.LogEventLevel;
			import mx.logging.targets.TraceTarget;
			import mx.managers.PopUpManager;
			
			[Embed(source="../assets/BackgroundImage.png")]
			private static var BG_IMAGE:Class;
			
			protected function mainview1_completeHandler(event:Event):void
			{
				login.visible=false;
			}
			
			protected function applicationCompleteHandler(event:FlexEvent):void
			{
				URLRequestDefaults.manageCookies=true;
				URLRequestDefaults.userAgent='Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.46 Safari/536.5';
				initLogging();
				this.checkUpdate();
				Model.getList();
				
				var bg:Shape = new Shape();
				bg.graphics.beginBitmapFill(Bitmap(new BG_IMAGE()).bitmapData);
				bg.graphics.drawRect(0,0,3000,3000);
				bg.graphics.endFill();
				bgCanvas.addChild(bg);
				
				stage.addEventListener(KeyboardEvent.KEY_DOWN , onKeyDown);
			}
			protected var appUpdater:ApplicationUpdaterUI=new ApplicationUpdaterUI(); // Used for auto-update
			
			
			// Initialize appUpdater and set some properties
			[Bindable]
			private var info:String;
			protected function checkUpdate():void
			{
				// set the URL for the update.xml file
				appUpdater.updateURL="http://www.raisedtech.com/moko/moko.update.xml";
				appUpdater.addEventListener(UpdateEvent.INITIALIZED, onUpdate);
				appUpdater.addEventListener(ErrorEvent.ERROR, onUpdaterError);
				appUpdater.isCheckForUpdateVisible=false;
				appUpdater.isFileUpdateVisible=false;
				appUpdater.isInstallUpdateVisible=false;
				appUpdater.initialize();
			}
			
			// Handler function triggered by the ApplicationUpdater.initialize.
			// The updater was initialized and it is ready to take commands.
			protected function onUpdate(event:UpdateEvent):void
			{
				// start the process of checking for a new update and to install
				trace(event);
				appUpdater.checkNow();
			}
			
			// Handler function for error events triggered by the ApplicationUpdater.initialize
			protected function onUpdaterError(event:ErrorEvent):void
			{
				trace(event);
			}
			
			private function initLogging():void
			{
				/* Create a target. */
				var logTarget:TraceTarget=new TraceTarget();
				logTarget.level=LogEventLevel.ALL;
				logTarget.includeDate=false;
				logTarget.includeTime=true;
				logTarget.includeCategory=true;
				logTarget.includeLevel=true;
				
				/* Begin logging. */
				Log.addTarget(logTarget);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				help.visible=false;
			}
			
			protected function spiderview1_cancelHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				help.visible=true;
			}
			
			protected function onKeyDown(event:KeyboardEvent):void
			{
				if(event.shiftKey && event.ctrlKey && event.altKey){
					if(!AddGirlView.INSTANCE){
						AddGirlView.INSTANCE=true;
						PopUpManager.centerPopUp(PopUpManager.createPopUp(this,AddGirlView,true));
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<s:SpriteVisualElement id="bgCanvas">
		
	</s:SpriteVisualElement>
	<view:LoginView id="login" width="100%" height="100%"
					 complete="mainview1_completeHandler(event)"/>
	
	<view:MainView visible="{!login.visible}" width="100%" height="100%"
					cancel="spiderview1_cancelHandler(event)"/>
	
	<s:Group id="help" visible="false" width="100%" height="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor alpha="0.3" color="0"/>
			</s:fill>
		</s:Rect>
		<s:Image horizontalCenter="0" verticalCenter="0" source="@Embed('../assets/help.jpg')">
			<s:filters>
				<s:DropShadowFilter distance="1" />
			</s:filters>
		</s:Image>
		<s:Button right="42" label="关闭" click="button1_clickHandler(event)" emphasized="true"
				  icon="@Embed('../assets/icons/16x16/cancel.png')" verticalCenter="-148"/>
	</s:Group>
	
</s:WindowedApplication>
